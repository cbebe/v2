(()=>{"use strict";var e={803:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},838:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},481:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},228:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(803);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(838);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(228);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(481);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"0de4bc645633eddc335de6b41a2889bf","url":"404.html"},{"revision":"efc4d822e8808ab70e35ec88f3347108","url":"assets/css/styles.5ec95237.css"},{"revision":"5e006b43c65429a27b282d11a4673836","url":"assets/js/01a85c17.1b2b3ae7.js"},{"revision":"aa5d4a50aa87a910c890b78664ead417","url":"assets/js/02785319.f73c74c0.js"},{"revision":"ccf06508399ece26424d78d7f0c0bfa0","url":"assets/js/027c12af.ee89c7dd.js"},{"revision":"7285ac397d17f2d7079a95261795f0d2","url":"assets/js/073e0fda.c0cf4eee.js"},{"revision":"fc15a65df0197bb7c0153596ca404032","url":"assets/js/0f665eb7.273468ed.js"},{"revision":"1eab467a1010b8641f8c580c154a5605","url":"assets/js/12a11c15.743051b5.js"},{"revision":"9c8f8e5b3bd912a69999d6481ff3c76a","url":"assets/js/1955d038.d49dd18b.js"},{"revision":"4220a8e41396c4088896eceb2bace4bf","url":"assets/js/1e6b366b.77efaa74.js"},{"revision":"8ffadcc78ca1d705cadf4c054f4769ff","url":"assets/js/1fadc6de.c0efc88e.js"},{"revision":"fa8273b0a510cb0a928fb03c4fc2221d","url":"assets/js/2079dcc0.8146e2ad.js"},{"revision":"3afc5f5a62819a0dd2727a6a6f3d46ab","url":"assets/js/2184cc3d.bfd5cebb.js"},{"revision":"94e30760442f86924178d9853623c627","url":"assets/js/2455.fe1cf6fa.js"},{"revision":"9711133f6bae641786edeb9ed4290c44","url":"assets/js/2602.6acf30c1.js"},{"revision":"8ec676de6cb2a14dcabc6fa304f8030c","url":"assets/js/2917.40833b97.js"},{"revision":"0a36ebf87d61db994c5f90d88338850f","url":"assets/js/2ccb4a70.6f57923e.js"},{"revision":"32b501611003aa060a1cba5a92c74954","url":"assets/js/2df2f8dc.d34c5643.js"},{"revision":"0c7695fcca31c6c82030e55f0221c793","url":"assets/js/2f56531c.ea83d938.js"},{"revision":"0f78b32dd7d1151ce3a08a340cf35ce7","url":"assets/js/3498.8a8a5cee.js"},{"revision":"3e065f96d10b4152d5e95f709c34cc5e","url":"assets/js/3c816a67.377d1a1a.js"},{"revision":"49aeacb8882c6781860112c72aa917e9","url":"assets/js/4792d0f9.3a284387.js"},{"revision":"2b3696dc341f37fa54e693bba5854375","url":"assets/js/4c22b11d.f4ab2d5a.js"},{"revision":"ef48f563eb9244f27a4e29f9777e9424","url":"assets/js/4db62c18.6c2cb447.js"},{"revision":"6ac2b7778bbfbf9fa55901672830f35b","url":"assets/js/5eae55e3.f4a811c0.js"},{"revision":"3cc71356cb423baf35935ec739037c2b","url":"assets/js/64105761.ee3b911a.js"},{"revision":"e95d6067dc4f13cd7214a89ec0486f38","url":"assets/js/658.72eb0efd.js"},{"revision":"0bd161ad8906edd9b18f3ca887b4de5b","url":"assets/js/6875c492.f173c322.js"},{"revision":"07ff59e641064193f324706d8903e4a3","url":"assets/js/6b2d8fbe.72e93991.js"},{"revision":"a25237ff3d795cec407b90fd59eaf324","url":"assets/js/6b9f5967.0afcdf2b.js"},{"revision":"8f8f9d8b82b86329744b8bcbdde48f74","url":"assets/js/6c80f932.cbb1bbfb.js"},{"revision":"9cd7d8298f6eee6c6258d91a8f873d84","url":"assets/js/6d6393ff.da79036a.js"},{"revision":"9d6ea1e58e50cefbb4c9c179a4464edf","url":"assets/js/70f520a1.2b679168.js"},{"revision":"bfe7b815322d71d7fb7c48700498fe2e","url":"assets/js/7a37a2ff.f21dc74a.js"},{"revision":"6ab94f8401bdbe217d660b7a3e77a1c7","url":"assets/js/7fe3067b.ec6ee898.js"},{"revision":"0304b016110486dcb711f80e14a0e0e3","url":"assets/js/814f3328.039b85e2.js"},{"revision":"e845005b7fb25a9b9658f3b7316d1adb","url":"assets/js/825db136.70881b67.js"},{"revision":"d8e9a041299e33c44e334a3dc3aa58a5","url":"assets/js/8ba18878.bc97031b.js"},{"revision":"46e4cb8568ad17a229dc4c094307d607","url":"assets/js/92a46314.c5b7fb61.js"},{"revision":"a298975166133f8c207c7024ccd0a6a9","url":"assets/js/931707c5.0c98ea63.js"},{"revision":"f069dd0d4e596d2dae3f87a38a4bec44","url":"assets/js/949081ab.a19d9976.js"},{"revision":"f4eeae395eba0abce298c5ac15750946","url":"assets/js/9d8b51d1.97ba07e3.js"},{"revision":"d773154e4e33a735282970ff49a8bc65","url":"assets/js/9dd8a0d2.78945569.js"},{"revision":"51e15f2569bc69112162902b8616b091","url":"assets/js/9e4087bc.e15c432b.js"},{"revision":"b665d9fd04f184296943b6130888ccd2","url":"assets/js/a06a51a8.6c3b6751.js"},{"revision":"5b575dbbefcb94adfb96166126cd40ce","url":"assets/js/a21294e7.23e89c1e.js"},{"revision":"dbae9a1ccbd070a432ccaa3c714e3c61","url":"assets/js/a2280744.5cfa1ede.js"},{"revision":"9f90a1354728f68caaf9d7977e53ad8f","url":"assets/js/a6aa9e1f.6c24ccde.js"},{"revision":"2c21895e728b75d206d4fdcf35785baa","url":"assets/js/ac918956.f49af3d0.js"},{"revision":"443128d240236ea045b2cdc647dacd97","url":"assets/js/af7f9cc5.a99f9b06.js"},{"revision":"1825642a2407b51cb2a4a9a0f3181915","url":"assets/js/b1b844e7.90e07b3a.js"},{"revision":"457d90e6629d1a8de206e5a7f941622b","url":"assets/js/b85738d7.bac256d3.js"},{"revision":"4530c86962fdb8f6c31b1fda566f2f84","url":"assets/js/b902e4af.1c65658e.js"},{"revision":"028e7f30369c90e95e390b2764e2ee74","url":"assets/js/bb899d9f.03cafc8d.js"},{"revision":"ab19defcdb3d0ff0f56023058c6ff80c","url":"assets/js/c26f7659.a276095a.js"},{"revision":"8e0ca803dd49cbabac96c27a5062de65","url":"assets/js/ccc49370.1031c5a4.js"},{"revision":"330a6d5fd25d2430de24a76d6b1b25d2","url":"assets/js/dee746b4.6e745d7e.js"},{"revision":"50fd2cc2004a598251fe2a15b3526f83","url":"assets/js/df89e4a8.75758db7.js"},{"revision":"56bf26febe517fcd14f6bd2a2cec486e","url":"assets/js/e352f27b.301f351c.js"},{"revision":"c976ce1dc11a8874a8fbf8f76a46f11c","url":"assets/js/e3cf3ab6.b5b7cf97.js"},{"revision":"8a25ef99211713279e7bf250e0aea3d6","url":"assets/js/f02a057a.15fa4503.js"},{"revision":"0fb143228512eb3313cbc1d2dd63522d","url":"assets/js/f0318012.bdd37499.js"},{"revision":"208e3190dc8f0fdd85dfdf2db551e7e9","url":"assets/js/f5183424.f37a702f.js"},{"revision":"1256acfa27ac5ecdcb10ed5c59a5b69c","url":"assets/js/f67bdc38.d3bf1fa2.js"},{"revision":"89a271fef1126cd86ac1ebf1fb670717","url":"assets/js/f6d38f2a.0f7913b8.js"},{"revision":"ee2d86274116412da7b44569de065fc0","url":"assets/js/feeb9c6c.9e50c9c0.js"},{"revision":"143d9d2e3b0a4e62f5c479edccf0d2df","url":"assets/js/ff94e794.17b368cc.js"},{"revision":"bb7bc68fbf8a0dec1a154e2d9e1e217c","url":"assets/js/main.22ef4d76.js"},{"revision":"a850671ac832c7dcc59fb6a2ea451441","url":"assets/js/runtime~main.8a76933a.js"},{"revision":"e6af46ea541ec6886478fed2224d1369","url":"blog/2022/06/07/friendship-ended/index.html"},{"revision":"d80234a2e66bab10a0cc798872fa9557","url":"blog/archive/index.html"},{"revision":"64ed3b5afe03f6618129148c6c0b0679","url":"blog/bye-bye-netlify/index.html"},{"revision":"7d8a45b2fe0af709de1852501777665a","url":"blog/dev-log/boboman/day1/index.html"},{"revision":"f94fe876c4733d7aad1212c499373e08","url":"blog/dev-log/boboman/day2/index.html"},{"revision":"b069b73c58920e3217a795bc4165cad9","url":"blog/dev-log/boboman/day3/index.html"},{"revision":"f8e496d55cffcf4cf3e8eb6fd12adf02","url":"blog/dev-log/boboman/day4/index.html"},{"revision":"872290d3077b6e1230b5b163e9655aed","url":"blog/index.html"},{"revision":"e4ee468b0424060a542d0d8ad71045ee","url":"blog/tags/backend/index.html"},{"revision":"54543723f7e57f4acf7d7cd2fdafcf7d","url":"blog/tags/dev-log/index.html"},{"revision":"c77af9e73626bf3b36228c2a51d76700","url":"blog/tags/dev/index.html"},{"revision":"0915ba505fd3fa5a77c2f43f58067950","url":"blog/tags/first/index.html"},{"revision":"929cdc596fbc2036b9f58ac52735f599","url":"blog/tags/gh-pages/index.html"},{"revision":"f56b4d9f2de60a67e31e0c2712ce8994","url":"blog/tags/go/index.html"},{"revision":"88259e2632663ae0351c4349f423fa71","url":"blog/tags/hosting/index.html"},{"revision":"2c0df415dddd90467e3022c6304f5990","url":"blog/tags/index.html"},{"revision":"23fb3ec60f01bd7d00c1f57edd5edd46","url":"blog/tags/love/index.html"},{"revision":"6e72ccec9cf1c44f248bdbbc4bde143b","url":"blog/tags/lua/index.html"},{"revision":"4b271aa3ec3d5ed55f9f4465a73d4756","url":"blog/tags/meme/index.html"},{"revision":"f23f380cdd560199f0b5adf80e860e53","url":"blog/tags/multiplayer/index.html"},{"revision":"0b2c251c36e36f1b05ced906f06eef3f","url":"blog/tags/netlify/index.html"},{"revision":"57517de95af722fb079a37e1c355a131","url":"blog/tags/til/index.html"},{"revision":"41ec95df1f0512d974d9279b3a42813c","url":"blog/tags/typescript/index.html"},{"revision":"a17701191a351cc8186c9e401a1f4c8f","url":"blog/tags/welcome/index.html"},{"revision":"d88f78f287bac145e8a697cd5fcc3953","url":"blog/til/my-actual-height/index.html"},{"revision":"9b7499a28ae285131d5d73e8aed10b1e","url":"blog/welcome/index.html"},{"revision":"7317bdb105db156ec9e93fc22bea2d30","url":"index.html"},{"revision":"d5443a06fab2877663bfef43d8f553bb","url":"manifest.json"},{"revision":"49b3de86bf07dd69dafe8be0ccfe68be","url":"projects/index.html"},{"revision":"c25752f47dcc7ca946cbefdf0a521068","url":"work/index.html"},{"revision":"f3c141d93c2fa0ff22109674933bf1d4","url":"android-chrome-192x192.png"},{"revision":"5297b9312c0ac6c8fdd306dc865cfb8a","url":"android-chrome-512x512.png"},{"revision":"a6a595d086a2cac9c0fb735d7cc4d08b","url":"apple-touch-icon.png"},{"revision":"7f740557aa8f363f922f8c88029c364f","url":"assets/images/boboman-81f5324a09b21c5973c71e5ad3c65132.gif"},{"revision":"108dd55001116a31b54284171071131b","url":"favicon-16x16.png"},{"revision":"0f934f6eed47b8c1dceacd4838b70061","url":"favicon-32x32.png"},{"revision":"fbff65a23b8a920105ed91f976f47d44","url":"favicon.ico"},{"revision":"c3aa24619e1189e1598915cff7f0c16f","url":"img/devpost.svg"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"3347c54aa0cd5907b9dd834d0c7495ff","url":"img/email.svg"},{"revision":"63e30ac6e5c59cb3e2d1076ca68e3f5d","url":"img/gitea.svg"},{"revision":"07883e93734b98cae0f7b9c55d287250","url":"img/github.svg"},{"revision":"0ad2d4f0834413c8d66ca3ecee620351","url":"img/isaic-logo.png"},{"revision":"439e2be9600bfdccbbb0c7b2b2414f93","url":"img/isaic.svg"},{"revision":"4b17c9586313717e568e841e662d381e","url":"img/linkedin.svg"},{"revision":"b80f24b1a99646b25d9dded67d589c82","url":"img/new_tab.svg"},{"revision":"e1a2f971a6ea83cd2fbf87de6399763b","url":"img/npm-logo.svg"},{"revision":"cbdc79da1ad69751cfdebc27ea90d52e","url":"img/thyck/h2h.svg"},{"revision":"055c03e52da9e57196d2a731ff40393a","url":"img/thyck/logo.png"},{"revision":"389c76edccbe2574cc0d478d11954636","url":"img/thyck/logo.svg"},{"revision":"8ffc632675fed0ad918b736b27400c36","url":"img/thyck/wapp.svg"},{"revision":"a6b83d7b4c3cf36cb21eb7a9721716dd","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"b64ae8e3c10e5ff2ec85a653cfe6edf8","url":"img/undraw_docusaurus_react.svg"},{"revision":"8fa6e79a15c385d7b2dc4bb761a2e9e3","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();